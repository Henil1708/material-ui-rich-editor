{"version":3,"file":"index.js","sources":["../src/utils/editorsUtils.js","../src/LinkTooltip.jsx","../src/Toolbar.jsx","../src/RichtextEditor.jsx"],"sourcesContent":["/**\n * Apply formatting to the selected text\n * @param {string} command - The formatting command\n * @param {string} value - Optional value for the command\n */\nexport const applyFormatting = (command, value = null) => {\n  document.execCommand(command, false, value);\n};\n\n/**\n * Get information about the current selection\n * @returns {object} Selection information\n */\nexport const getSelectionInfo = () => {\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  const range = selection.getRangeAt(0);\n  return {\n    selection,\n    range: range.cloneRange(),\n    text: selection.toString(),\n    isCollapsed: selection.isCollapsed,\n  };\n};\n\n/**\n * Insert a link at the specified range or current selection\n * @param {string} url - The URL to insert\n * @param {Range} range - Optional range to insert at\n */\nexport const insertLink = (url, range = null) => {\n  const selection = window.getSelection();\n\n  if (range) {\n    // Restore the stored range\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n\n  if (selection.isCollapsed) {\n    // No text selected, insert the URL as both text and link\n    const linkElement = document.createElement(\"a\");\n    linkElement.href = url;\n    linkElement.textContent = url;\n    linkElement.target = \"_blank\";\n    linkElement.rel = \"noopener noreferrer\";\n\n    range.insertNode(linkElement);\n    range.setStartAfter(linkElement);\n    range.setEndAfter(linkElement);\n    selection.removeAllRanges();\n    selection.addRange(range);\n  } else {\n    // Text is selected, convert it to a link\n    document.execCommand(\"createLink\", false, url);\n\n    // Set target and rel attributes for the created link\n    const links = document.querySelectorAll('a[href=\"' + url + '\"]');\n    links.forEach((link) => {\n      link.target = \"_blank\";\n      link.rel = \"noopener noreferrer\";\n    });\n  }\n};\n\n/**\n * Remove link formatting from the current selection\n */\nexport const removeLink = () => {\n  document.execCommand(\"unlink\");\n};\n\n/**\n * Check if the current selection has specific formatting\n * @param {string} command - The formatting command to check\n * @returns {boolean} Whether the formatting is active\n */\nexport const isFormatActive = (command) => {\n  return document.queryCommandState(command);\n};\n\n/**\n * Get the current format block type\n * @returns {string} The current block format\n */\nexport const getCurrentBlockFormat = () => {\n  return document.queryCommandValue(\"formatBlock\");\n};\n\n/**\n * Insert HTML at the current cursor position\n * @param {string} html - The HTML to insert\n */\nexport const insertHTML = (html) => {\n  const selection = window.getSelection();\n  if (selection.rangeCount > 0) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const div = document.createElement(\"div\");\n    div.innerHTML = html;\n    const fragment = document.createDocumentFragment();\n\n    while (div.firstChild) {\n      fragment.appendChild(div.firstChild);\n    }\n\n    range.insertNode(fragment);\n    range.collapse(false);\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n};\n\n/**\n * Get the plain text content from HTML\n * @param {string} html - The HTML content\n * @returns {string} Plain text content\n */\nexport const getPlainText = (html) => {\n  const div = document.createElement(\"div\");\n  div.innerHTML = html;\n  return div.textContent || div.innerText || \"\";\n};\n\n/**\n * Clean up HTML content by removing unnecessary tags and attributes\n * @param {string} html - The HTML to clean\n * @returns {string} Cleaned HTML\n */\nexport const cleanHTML = (html) => {\n  // Create a temporary div to parse the HTML\n  const div = document.createElement(\"div\");\n  div.innerHTML = html;\n\n  // Remove empty paragraphs and divs\n  const emptyElements = div.querySelectorAll(\"p:empty, div:empty\");\n  emptyElements.forEach((el) => el.remove());\n\n  // Remove style attributes (keep only semantic formatting)\n  const elementsWithStyle = div.querySelectorAll(\"[style]\");\n  elementsWithStyle.forEach((el) => el.removeAttribute(\"style\"));\n\n  return div.innerHTML;\n};\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport { Box, Button, Paper, TextField, Typography } from \"@material-ui/core\";\n\nexport const LinkTooltip = ({\n  position,\n  onSubmit,\n  onClose,\n  initialValue = \"\",\n  isEdit = false,\n}) => {\n  const [url, setUrl] = useState(initialValue);\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    setUrl(initialValue);\n    // Focus the input after a brief delay to ensure it's rendered\n    setTimeout(() => {\n      typeof inputRef.current.focus === \"function\" && inputRef.current.focus();\n      typeof inputRef.current.select === \"function\" &&\n        inputRef.current.select();\n    }, 50);\n  }, [initialValue]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (url.trim()) {\n      let formattedUrl = url.trim();\n      // Add https:// if no protocol is specified\n      if (!formattedUrl.match(/^https?:\\/\\//)) {\n        formattedUrl = \"https://\" + formattedUrl;\n      }\n      onSubmit(formattedUrl);\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Escape\") {\n      onClose();\n    }\n  };\n\n  const handleRemoveLink = () => {\n    document.execCommand(\"unlink\");\n    onClose();\n  };\n\n  return (\n    <Paper\n      elevation={4}\n      sx={{\n        position: \"absolute\",\n        left: position.x,\n        top: position.y,\n        transform: \"translateX(-50%)\",\n        zIndex: 1000,\n        p: 2,\n        minWidth: 320,\n        maxWidth: 400,\n      }}\n    >\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit}\n        sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}\n      >\n        <Typography variant=\"subtitle2\" sx={{ fontWeight: 600 }}>\n          {isEdit ? \"Edit Link\" : \"Insert Link\"}\n        </Typography>\n        <TextField\n          inputRef={inputRef}\n          fullWidth\n          size=\"small\"\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n          onKeyDown={handleKeyDown}\n          placeholder=\"Enter URL (e.g., https://example.com)\"\n          variant=\"outlined\"\n        />\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <Box sx={{ display: \"flex\", gap: 1 }}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              size=\"small\"\n              disabled={!url.trim()}\n              sx={{ textTransform: \"none\" }}\n            >\n              {isEdit ? \"Update\" : \"Insert\"}\n            </Button>\n            <Button\n              type=\"button\"\n              variant=\"outlined\"\n              size=\"small\"\n              onClick={onClose}\n              sx={{ textTransform: \"none\" }}\n            >\n              Cancel\n            </Button>\n          </Box>\n          {isEdit && (\n            <Button\n              type=\"button\"\n              variant=\"contained\"\n              color=\"error\"\n              size=\"small\"\n              onClick={handleRemoveLink}\n              sx={{ textTransform: \"none\" }}\n            >\n              Remove\n            </Button>\n          )}\n        </Box>\n      </Box>\n    </Paper>\n  );\n};\n","import React from \"react\";\n\nimport {\n  FormatBold,\n  FormatItalic,\n  FormatUnderlined,\n  StrikethroughS,\n  Link as LinkIcon,\n  FormatClear,\n} from \"@mui/icons-material\";\nimport { Box, Button, Divider, IconButton, Tooltip } from \"@material-ui/core\";\n\nexport const Toolbar = ({\n  onFormat,\n  showStrikethrough = false,\n  showCleanFormat = false,\n}) => {\n  const toolbarButtons = [\n    {\n      command: \"bold\",\n      icon: FormatBold,\n      title: \"Bold (Ctrl+B)\",\n      group: \"text\",\n    },\n    {\n      command: \"italic\",\n      icon: FormatItalic,\n      title: \"Italic (Ctrl+I)\",\n      group: \"text\",\n    },\n    {\n      command: \"underline\",\n      icon: FormatUnderlined,\n      title: \"Underline (Ctrl+U)\",\n      group: \"text\",\n    },\n    showStrikethrough && {\n      command: \"strikeThrough\",\n      icon: StrikethroughS,\n      title: \"Strikethrough (Ctrl+S)\",\n      group: \"text\",\n    },\n    {\n      command: \"createLink\",\n      icon: LinkIcon,\n      title: \"Insert Link (Ctrl+K)\",\n      group: \"link\",\n    },\n    showCleanFormat && {\n      command: \"removeFormat\",\n      icon: FormatClear,\n      title: \"Remove Formatting (Ctrl+E)\",\n      group: \"clean\",\n    },\n  ].filter(Boolean);\n\n  const formatButtons = [\n    { command: \"formatBlock\", value: \"h1\", label: \"H1\", group: \"heading\" },\n    { command: \"formatBlock\", value: \"h2\", label: \"H2\", group: \"heading\" },\n    { command: \"formatBlock\", value: \"h3\", label: \"H3\", group: \"heading\" },\n    { command: \"formatBlock\", value: \"p\", label: \"P\", group: \"heading\" },\n  ];\n\n  const listButtons = [\n    { command: \"insertUnorderedList\", label: \"â€¢ List\", group: \"list\" },\n    { command: \"insertOrderedList\", label: \"1. List\", group: \"list\" },\n    {\n      command: \"formatBlock\",\n      value: \"blockquote\",\n      label: \"Quote\",\n      group: \"list\",\n    },\n  ];\n\n  const handleButtonClick = (command, value) => {\n    onFormat(command, value);\n  };\n\n  return (\n    <Box\n      sx={{\n        p: \"4px\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n        gap: 0.5,\n      }}\n    >\n      {/* Heading buttons */}\n      <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 0.5 }}>\n        {formatButtons.map(({ command, value, label }) => (\n          <Button\n            key={`${command}-${value}`}\n            onClick={() => handleButtonClick(command, value)}\n            size=\"small\"\n            variant=\"text\"\n            sx={{\n              minWidth: \"auto\",\n              px: 1,\n              py: 0.5,\n              fontSize:\n                value === \"h1\"\n                  ? \"1.1rem\"\n                  : value === \"h2\"\n                  ? \"1rem\"\n                  : \"0.875rem\",\n              fontWeight: value?.startsWith(\"h\") ? \"bold\" : \"normal\",\n              color: \"#666\",\n              \"&:hover\": { bgcolor: \"#e0e0e0\" },\n              \"&:active\": { bgcolor: \"#d5d5d5\" },\n            }}\n          >\n            {label}\n          </Button>\n        ))}\n      </Box>\n\n      <Divider orientation=\"vertical\" flexItem sx={{ mx: 1 }} />\n\n      {/* Text formatting buttons */}\n      <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 0.5 }}>\n        {toolbarButtons.map(({ command, icon: Icon, title }) => (\n          <Tooltip key={command} title={title}>\n            <IconButton\n              onClick={() => handleButtonClick(command)}\n              size=\"small\"\n              sx={{\n                \"&:hover\": { bgcolor: \"#e0e0e0\" },\n                \"&:active\": { bgcolor: \"#d5d5d5\" },\n              }}\n            >\n              <Icon fontSize=\"medium\" />\n            </IconButton>\n          </Tooltip>\n        ))}\n      </Box>\n\n      <Divider orientation=\"vertical\" flexItem sx={{ mx: 1 }} />\n      {/* List and quote buttons */}\n      <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 0.5 }}>\n        {listButtons.map(({ command, value, label }) => (\n          <Button\n            key={`${command}-${value || \"default\"}`}\n            onClick={() => handleButtonClick(command, value)}\n            size=\"small\"\n            variant=\"text\"\n            sx={{\n              px: 1,\n              py: 0.5,\n              fontSize: \"0.875rem\",\n              color: \"#666\",\n              \"&:hover\": { bgcolor: \"#e0e0e0\" },\n              \"&:active\": { bgcolor: \"#d5d5d5\" },\n            }}\n          >\n            {label}\n          </Button>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n","import React, { useCallback, useRef, useState, useEffect } from \"react\";\nimport { Box, Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  applyFormatting,\n  insertLink,\n  cleanHTML,\n  getPlainText,\n} from \"./utils/editorsUtils\";\nimport { LinkTooltip } from \"./LinkTooltip\";\nimport { Toolbar } from \"./Toolbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    border: \"1px solid #e0e0e0\",\n    borderRadius: theme.spacing(1),\n    overflow: \"hidden\",\n    \"&:focus-within\": {\n      borderColor: theme.palette.primary.main,\n    },\n  },\n  editor: {\n    padding: theme.spacing(2),\n    outline: \"none\",\n    \"& p\": {\n      margin: `${theme.spacing(1)}px 0`,\n      \"&:first-child\": { marginTop: 0 },\n      \"&:last-child\": { marginBottom: 0 },\n    },\n    \"& h1\": {\n      fontSize: \"2rem\",\n      fontWeight: \"bold\",\n      margin: `${theme.spacing(1.5)}px 0`,\n    },\n    \"& h2\": {\n      fontSize: \"1.5rem\",\n      fontWeight: \"bold\",\n      margin: `${theme.spacing(1)}px 0`,\n    },\n    \"& h3\": {\n      fontSize: \"1.25rem\",\n      fontWeight: \"bold\",\n      margin: `${theme.spacing(1)}px 0`,\n    },\n    \"& ul\": {\n      listStyle: \"disc\",\n      paddingLeft: theme.spacing(3),\n      margin: `${theme.spacing(1)}px 0`,\n    },\n    \"& ol\": {\n      listStyle: \"decimal\",\n      paddingLeft: theme.spacing(3),\n      margin: `${theme.spacing(1)}px 0`,\n    },\n    \"& li\": { margin: `${theme.spacing(0.5)}px 0` },\n    \"& blockquote\": {\n      borderLeft: \"4px solid #ccc\",\n      paddingLeft: theme.spacing(2),\n      fontStyle: \"italic\",\n      margin: `${theme.spacing(2)}px 0`,\n      color: \"#666\",\n    },\n    \"& a\": {\n      color: theme.palette.primary.main,\n      textDecoration: \"underline\",\n      \"&:hover\": { color: theme.palette.primary.dark },\n    },\n    \"& strong\": { fontWeight: \"bold\" },\n    \"& em\": { fontStyle: \"italic\" },\n    \"& u\": { textDecoration: \"underline\" },\n  },\n  placeholder: {\n    position: \"absolute\",\n    top: 16,\n    left: 16,\n    color: \"#999\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n  },\n}));\n\nexport const RichTextEditor = ({\n  name = \"\",\n  value = \"\",\n  onChange = () => {},\n  placeholder = \"Start typing...\",\n  maxChars = null,\n  height = \"auto\",\n  minHeight = \"150px\",\n  maxHeight = null,\n  sx = {},\n  style,\n}) => {\n  const classes = useStyles();\n  const editorRef = useRef(null);\n  const [showLinkTooltip, setShowLinkTooltip] = useState(false);\n  const [linkTooltipPosition, setLinkTooltipPosition] = useState({\n    x: 0,\n    y: 0,\n  });\n  const [currentLink, setCurrentLink] = useState(\"\");\n  const [isLinkEdit, setIsLinkEdit] = useState(false);\n  const [storedRange, setStoredRange] = useState(null);\n  const [isFocused, setIsFocused] = useState(false);\n\n  useEffect(() => {\n    if (editorRef.current && value !== editorRef.current.innerHTML) {\n      editorRef.current.innerHTML = value;\n    }\n  }, [value]);\n\n  const handleInput = useCallback(() => {\n    if (editorRef.current && onChange) {\n      let html = editorRef.current.innerHTML;\n      if (maxChars) {\n        const plain = getPlainText(html);\n        if (plain.length > maxChars) {\n          // Truncate to maxChars\n          html = cleanHTML(plain.slice(0, maxChars));\n          editorRef.current.innerHTML = html;\n        }\n      }\n      onChange({ target: { name, value: html } });\n    }\n  }, [onChange, name, maxChars]);\n\n  const handleFormat = useCallback(\n    (command, value) => {\n      if (command === \"createLink\") {\n        const selection = window.getSelection();\n        if (selection && !selection.isCollapsed) {\n          // Store the current range before showing tooltip\n          const range = selection.getRangeAt(0).cloneRange();\n          setStoredRange(range);\n          const rect = range.getBoundingClientRect();\n          const editorRect = editorRef.current?.getBoundingClientRect();\n          if (editorRect) {\n            setLinkTooltipPosition({\n              x: rect.left - editorRect.left + rect.width / 2,\n              y: rect.bottom - editorRect.top + 5,\n            });\n            setCurrentLink(\"\");\n            setIsLinkEdit(false);\n            setShowLinkTooltip(true);\n          }\n        } else {\n          // No text selected, show tooltip at cursor position\n          const range = selection?.getRangeAt(0);\n          if (range) {\n            setStoredRange(range.cloneRange());\n            const rect = range.getBoundingClientRect();\n            const editorRect = editorRef.current?.getBoundingClientRect();\n            if (editorRect) {\n              setLinkTooltipPosition({\n                x: rect.left - editorRect.left,\n                y: rect.bottom - editorRect.top + 5,\n              });\n              setCurrentLink(\"\");\n              setIsLinkEdit(false);\n              setShowLinkTooltip(true);\n            }\n          }\n        }\n        return;\n      }\n      if (command === \"removeFormat\") {\n        document.execCommand(\"removeFormat\", false, null);\n        handleInput();\n        return;\n      }\n      applyFormatting(command, value);\n      if (typeof editorRef?.current?.focus === \"function\") {\n        editorRef.current.focus();\n      }\n      handleInput();\n    },\n    [handleInput]\n  );\n\n  const handleLinkSubmit = useCallback(\n    (url) => {\n      insertLink(url, storedRange || undefined);\n      setShowLinkTooltip(false);\n      setStoredRange(null);\n      if (typeof editorRef?.current?.focus === \"function\") {\n        editorRef.current.focus();\n      }\n      handleInput();\n    },\n    [handleInput, storedRange]\n  );\n\n  const handleClick = useCallback((e) => {\n    const target = e.target;\n    if (target.tagName === \"A\") {\n      e.preventDefault();\n      const rect = target.getBoundingClientRect();\n      const editorRect = editorRef.current?.getBoundingClientRect();\n      if (editorRect) {\n        setLinkTooltipPosition({\n          x: rect.left - editorRect.left + rect.width / 2,\n          y: rect.bottom - editorRect.top + 5,\n        });\n        setCurrentLink(target.getAttribute(\"href\") || \"\");\n        setIsLinkEdit(true);\n        setShowLinkTooltip(true);\n      }\n    } else {\n      setShowLinkTooltip(false);\n    }\n  }, []);\n\n  const handleKeyDown = useCallback(\n    (e) => {\n      // Handle common keyboard shortcuts\n      if (e.ctrlKey || e.metaKey) {\n        switch (e.key) {\n          case \"b\":\n            e.preventDefault();\n            handleFormat(\"bold\");\n            break;\n          case \"i\":\n            e.preventDefault();\n            handleFormat(\"italic\");\n            break;\n          case \"u\":\n            e.preventDefault();\n            handleFormat(\"underline\");\n            break;\n          case \"k\":\n            e.preventDefault();\n            handleFormat(\"createLink\");\n            break;\n          case \"s\":\n            e.preventDefault();\n            handleFormat(\"strikeThrough\");\n            break;\n          case \"e\":\n            e.preventDefault();\n            handleFormat(\"removeFormat\");\n            break;\n        }\n      }\n\n      if (e.key === \"Escape\") {\n        setShowLinkTooltip(false);\n        setStoredRange(null);\n      }\n    },\n    [handleFormat]\n  );\n\n  // Character counter logic\n  const plainText = getPlainText(value);\n  const charsLeft = maxChars ? maxChars - plainText.length : null;\n\n  return (\n    <Paper elevation={1} className={classes.paper} style={style} sx={sx}>\n      <Toolbar onFormat={handleFormat} showStrikethrough showCleanFormat />\n      <Box style={{ position: \"relative\" }}>\n        <Box\n          ref={editorRef}\n          contentEditable\n          onFocus={() => setIsFocused(true)}\n          onBlur={() => setIsFocused(false)}\n          onInput={handleInput}\n          onClick={handleClick}\n          onKeyDown={handleKeyDown}\n          className={classes.editor}\n          style={{\n            minHeight,\n            height,\n            maxHeight,\n            overflowY: maxHeight ? \"auto\" : undefined,\n          }}\n          suppressContentEditableWarning\n        />\n        {(!editorRef.current || editorRef.current.innerHTML === \"\") &&\n          !isFocused && (\n            <Box className={classes.placeholder}>{placeholder}</Box>\n          )}\n        {showLinkTooltip && (\n          <LinkTooltip\n            position={linkTooltipPosition}\n            onSubmit={handleLinkSubmit}\n            onClose={() => {\n              setShowLinkTooltip(false);\n              setStoredRange(null);\n            }}\n            initialValue={currentLink}\n            isEdit={isLinkEdit}\n          />\n        )}\n        {maxChars && (\n          <Box\n            sx={{\n              position: \"absolute\",\n              right: 8,\n              bottom: 4,\n              fontSize: \"0.75rem\",\n              color: charsLeft < 0 ? \"error.main\" : \"text.secondary\",\n              pointerEvents: \"none\",\n            }}\n          >\n            {charsLeft} characters remaining\n          </Box>\n        )}\n      </Box>\n    </Paper>\n  );\n};\n"],"names":["applyFormatting","command","value","arguments","length","undefined","document","execCommand","insertLink","url","range","selection","window","getSelection","removeAllRanges","addRange","isCollapsed","linkElement","createElement","href","textContent","target","rel","insertNode","setStartAfter","setEndAfter","querySelectorAll","forEach","link","getPlainText","html","div","innerHTML","innerText","cleanHTML","el","remove","removeAttribute","LinkTooltip","_ref","position","onSubmit","onClose","_ref$initialValue","initialValue","_ref$isEdit","isEdit","_useState2","_slicedToArray","useState","setUrl","inputRef","useRef","useEffect","setTimeout","current","focus","select","React","Paper","elevation","sx","left","x","top","y","transform","zIndex","p","minWidth","maxWidth","Box","component","e","preventDefault","trim","formattedUrl","match","display","flexDirection","gap","Typography","variant","fontWeight","TextField","fullWidth","size","onChange","onKeyDown","key","placeholder","justifyContent","alignItems","Button","type","disabled","textTransform","onClick","color","Toolbar","onFormat","_ref$showStrikethroug","showStrikethrough","_ref$showCleanFormat","showCleanFormat","toolbarButtons","icon","FormatBold","title","group","FormatItalic","FormatUnderlined","StrikethroughS","LinkIcon","Link","FormatClear","filter","Boolean","handleButtonClick","flexWrap","label","map","_ref2","concat","px","py","fontSize","startsWith","bgcolor","Divider","orientation","flexItem","mx","_ref3","Icon","Tooltip","IconButton","_ref4","useStyles","makeStyles","theme","paper","border","borderRadius","spacing","overflow","borderColor","palette","primary","main","editor","padding","outline","margin","marginTop","marginBottom","listStyle","paddingLeft","borderLeft","fontStyle","textDecoration","dark","pointerEvents","userSelect","_ref$name","name","_ref$value","_ref$onChange","_ref$placeholder","_ref$maxChars","maxChars","_ref$height","height","_ref$minHeight","minHeight","_ref$maxHeight","maxHeight","_ref$sx","style","classes","editorRef","showLinkTooltip","setShowLinkTooltip","_useState4","linkTooltipPosition","setLinkTooltipPosition","_useState6","currentLink","setCurrentLink","_useState8","isLinkEdit","setIsLinkEdit","_useState0","storedRange","setStoredRange","_useState10","isFocused","setIsFocused","handleInput","useCallback","plain","slice","handleFormat","_editorRef$current3","_editorRef$current","getRangeAt","cloneRange","rect","getBoundingClientRect","editorRect","width","bottom","_editorRef$current2","handleLinkSubmit","_editorRef$current4","handleClick","tagName","_editorRef$current5","getAttribute","handleKeyDown","ctrlKey","metaKey","plainText","charsLeft","className","ref","contentEditable","onFocus","onBlur","onInput","overflowY","suppressContentEditableWarning","right","queryCommandValue","rangeCount","text","toString","deleteContents","fragment","createDocumentFragment","firstChild","appendChild","collapse","queryCommandState"],"mappings":"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"}